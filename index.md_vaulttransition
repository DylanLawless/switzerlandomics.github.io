---
title: SwitzerlandOmics
layout: home
description: Empowering precision medicine
intro_image: "images/2025_E_L_Laurent_etherial_precision/1EBA3CDE-7455-49FD-8686-017F290965E3_wide.jpeg"
intro_image_absolute: true
intro_image_hide_on_mobile: true
show_call_box: false
---

# Quantified genomics
## We build the algorithms and data systems that enable rigorous genomic interpretation at scale. Our tools power clinical confidence, pharmacogenomic inference, and genome-scale engineering in real-world settings.

<p id="demo" style="min-width: 140px;"></p>

<script>
  var countDownDate = new Date("Sept 01, 2025 07:00:00").getTime();
  function updateCountdown() {
    var now = new Date().getTime();
    var distance = countDownDate - now;
    var days = Math.floor(distance / (1000 * 60 * 60 * 24));
    var hours = Math.floor((distance % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));
    var minutes = Math.floor((distance % (1000 * 60 * 60)) / (1000 * 60));
    var seconds = Math.floor((distance % (1000 * 60)) / 1000);
    var output = days + "d " + hours + "h " + minutes + "m " + seconds + "s";
    document.getElementById("demo").innerHTML = distance < 0 ? "Quant II" : output;
  }
  updateCountdown();
  var x = setInterval(updateCountdown, 1000);
</script>

<div class="submission-message">
<style>
.button-link {
  display: inline-block;
  padding: 12px 20px;
  background-color: #6A64F1;
  color: #fff;
  text-decoration: none;
  border-radius: 5px;
  font-size: 16px;
}
.button-link:hover { background-color: #5a54d1; }
</style>

<p><a href="/assets/submission_mailing_list" class="button-link">Notify me »</a></p>
<p><a href="https://genomicvault.switzerlandomics.ch" class="button-link vault-link">Go to Genomic Vault »</a></p>
</div>

<!-- vault overlay -->
<div class="vault-overlay" aria-hidden="true">
  <div class="vault-panel left"></div>
  <div class="vault-panel right"></div>
</div>
<div class="vault-seam" aria-hidden="true"></div>

<style>
.vault-overlay {
  position: fixed; inset: 0; pointer-events: none;
  z-index: 9999; display: grid; grid-template-columns: 1fr 1fr;
}
.vault-panel {
  background: #000;
  transform-origin: left center;
  transform: scaleX(0);
  transition: transform 700ms cubic-bezier(0.2, 0.7, 0.2, 1);
}
.vault-panel.right { transform-origin: right center; }
.vault-overlay.active { pointer-events: all; }
.vault-overlay.active .vault-panel { transform: scaleX(1); }
.vault-seam {
  position: fixed; top: 0; bottom: 0; left: 50%;
  width: 0; border-left: 1px solid rgba(255,255,255,0.08);
  z-index: 10000; opacity: 0;
  transition: opacity 700ms cubic-bezier(0.2, 0.7, 0.2, 1);
}
.vault-overlay.active ~ .vault-seam { opacity: 1; }
.vault-reset .vault-panel { transition: none !important; transform: scaleX(0) !important; }
</style>

<script>
(function () {
  const overlay = document.querySelector('.vault-overlay');
  const right = overlay.querySelector('.right');
  const duration = 700;
  const reduceMotion = window.matchMedia('(prefers-reduced-motion: reduce)').matches;
  const NAV_KEY = 'vaultNavToken';

  function newToken() {
    const t = Date.now() + '-' + Math.random().toString(36).slice(2);
    try { sessionStorage.setItem(NAV_KEY, t); } catch(e) {}
    window.__vaultNavToken = t;
    return t;
  }
  function currentToken() {
    try { return sessionStorage.getItem(NAV_KEY) || window.__vaultNavToken || ''; }
    catch(e) { return window.__vaultNavToken || ''; }
  }

  function resetVaultInstant() {
    overlay.classList.remove('active');
    overlay.classList.add('vault-reset');
    requestAnimationFrame(() => { overlay.classList.remove('vault-reset'); });
  }

  // Invalidate any old pending timeouts when this page comes back
  window.addEventListener('pageshow', function () {
    newToken();
    resetVaultInstant();
  });

  document.addEventListener('DOMContentLoaded', function () {
    newToken();
    resetVaultInstant();
  });

  // Also invalidate if page is being hidden or unloaded
  window.addEventListener('pagehide', newToken);
  window.addEventListener('beforeunload', newToken);
  document.addEventListener('visibilitychange', function () {
    if (document.visibilityState === 'visible') {
      newToken();
      resetVaultInstant();
    }
  });

  function navigateWithVault(url) {
    if (!url) return;
    if (reduceMotion) { window.location.href = url; return; }

    // Capture token at the time of scheduling
    const myToken = currentToken();

    // Ensure open state then animate
    overlay.classList.remove('active');
    requestAnimationFrame(() => {
      requestAnimationFrame(() => {
        overlay.classList.add('active');

        const onEnd = e => {
          if (e.propertyName !== 'transform') return;
          right.removeEventListener('transitionend', onEnd);
          // Invalidate any previous timers before leaving
          newToken();
          window.location.href = url;
        };
        right.addEventListener('transitionend', onEnd, { once: true });

        // Fallback. Only act if token still matches.
        const fallback = setTimeout(() => {
          if (currentToken() !== myToken) return;
          if (document.visibilityState === 'visible') {
            newToken();
            window.location.href = url;
          }
        }, duration + 150);

        // If the page is about to be hidden, cancel fallback
        window.addEventListener('pagehide', function cancel() {
          clearTimeout(fallback);
          right.removeEventListener('transitionend', onEnd);
          window.removeEventListener('pagehide', cancel);
        });
      });
    });
  }

  document.addEventListener('click', function (e) {
    const a = e.target.closest('.vault-link');
    if (!a) return;
    if (e.metaKey || e.ctrlKey || e.shiftKey || e.altKey || e.button === 1) return;
    const href = a.getAttribute('href');
    if (!href) return;
    e.preventDefault();
    navigateWithVault(href);
  }, { passive: false });
})();
</script>

